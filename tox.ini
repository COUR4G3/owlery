[tox]
envlist =
    clean
    py{38,39,310,311,312,py38,py39}
    pkg
    style
    typing
    docs
skip_missing_interpreters = true

[testenv]
description = run tests for {envname}
setenv = TMPDIR={envtmpdir}
deps =
    -r requirements.txt
    -r tests/requirements.txt
depends =
    py{38,39,310,311,312,py38,py39}: clean
    coveralls: py{38,39,310,311,312,py38,py39}
commands =
    pytest -v --cov-append --tb=short --basetemp={envtmpdir} {posargs}

[testenv:clean]
description = cleanup coverage files
deps = coverage[toml]
skip_install = true
commands = coverage erase

[testenv:coveralls]
description = check coverage with coveralls
deps =
    coveralls
commands =
    coveralls
passenv = GITHUB_*

[testenv:pkg]
description = check packaging
deps =
    build[virtualenv]>=0.10
    check-wheel-contents>=0.4
    twine>=4.0.2
commands =
    python -m build -o {envtmpdir} -s -w .
    twine check {envtmpdir}{/}*
    check-wheel-contents --no-config {envtmpdir}
skip_install = true

[testenv:spelling]
description = check spelling
changedir = docs
deps =
    -r requirements.txt
    -r docs/requirements.txt
commands =
    sphinx-build -W -b spelling -d {envtmpdir}/doctrees . {envtmpdir}/spelling
passenv = PYENCHANT_LIBRARY_PATH


[testenv:style]
description = check, lint and fix styling
deps = pre-commit
skip_install = true
commands = pre-commit run --all-files --show-diff-on-failure

[testenv:typing]
description = check static typing
deps = -r typing/requirements.txt
commands = mypy -p owlery

[testenv:docs]
description = build and test documentation
changedir = docs
deps =
    -r requirements.txt
    -r docs/requirements.txt
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees . {envtmpdir}/linkcheck
    sphinx-build -W -b spelling -d {envtmpdir}/doctrees . {envtmpdir}/spelling
passenv = PYENCHANT_LIBRARY_PATH
