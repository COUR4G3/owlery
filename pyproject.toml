[project]
name = "owlery"
description = "Uniform messaging service for Python applications."
readme = "README.md"
license = { text = "MIT" }
authors = [{name = "Michael de Villiers", email = "michael@devilears.co.za"},]
maintainers = [{name = "Michael de Villiers", email = "michael@devilears.co.za"},]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dynamic = ["version"]
requires-python = ">= 3.8"
dependencies = [
    "blinker ~= 1.6.2",
]

[project.scripts]
owlery = "owlery.cli:main"

[project.urls]
Homepage = "https://github.com/COUR4G3/owlery/"
Documentation = "https://owlery-messaging.readthedocs.io/"
Changes = "https://owlery-messaging.readthedocs.io/en/latest/changelog.html"
"Source Code" = "https://github.com/COUR4G3/owlery/"
"Issue Tracker" = "https://github.com/COUR4G3/owlery/issues/"
Donate = "https://ko-fi.com/cour4g3"

[project.optional-dependencies]
dev = [
    "bandit[toml] ~= 1.7.5",
    "black ~= 23.1.0",
    "flake8 ~= 6.0.0",
    "isort ~= 5.12.0",
    "pre_commit ~= 2.21.0",
    "pydocstyle ~= 6.3.0",
    "towncrier ~= 22.12.0",
]
docs = [
    "furo == 2022.12.7",
    "m2r2 ~= 0.3.3",
    "setuptools_scm ~= 7.1.0",
    "sphinx ~= 6.1.3",
    "sphinx_issues ~= 3.0.1",
    "sphinx-prompt ~= 1.6.0",
]
tests = [
    "pytest ~= 7.2.0",
    "pytest-cov ~= 4.0.0",
    "pytest-mock ~= 3.10.0",
    "pytest-skip-slow == 0.0.3",
    "tox ~= 4.5.1",
]
typing = [
    "mypy ~= 1.2.0",
    "types-PyYAML~=6.0.12.9",
    "types-requests~=2.28.11.17",
]

[build-system]
requires = ["setuptools >= 64.0", "setuptools_scm[toml] >= 6.2", "wheel"]
build-backend = "setuptools.build_meta"

[tool.bandit]
exclude_dirs = [".github", "tests"]
skips = ["B101"]

[tool.black]
force-exclude = '''
(
  /venv/
)
'''
line-length = 79
target-version = ['py38']

[tool.coverage.run]
source = ["owlery"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: nocover",

    # Don't complain about type checking code not run
    "if TYPE_CHECKING:",
    "if t.TYPE_CHECKING:",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if app\\.debug",
    "if current_app\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    "*/__main__.py",
    "*/_version.py",
]

[tool.isort]
profile = 'black'
line_length = 79
lines_between_types = 1
multi_line_output = 3
combine_as_imports = true
known_first_party = ['owlery', 'tests']

[tool.mypy]
python_version = '3.11'

[[tool.mypy.overrides]]
module = [
    "boto3",
    "click",
    "django",
    "django.*",
    "flask",
    "phonenumbers",
    "requests_toolbelt.sessions",
    "sendgrid",
    "sendgrid.*",
    "smpplib",
    "smpplib.*",
    "twilio.rest",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov=owlery/ --cov-report=term-missing:skip-covered"
markers = [
    "slow: tests that are slow",
    "integration: integration tests that require external tools",
]

[tool.setuptools.packages.find]
include = ["owlery*"]

[tool.setuptools_scm]
write_to = "owlery/_version.py"

[tool.towncrier]
package = "owlery"
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/template.md"
title_format = "## [{version}](https://github.com/COUR4G3/owlery/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/COUR4G3/owlery/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
